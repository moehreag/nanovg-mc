plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'java'
	id 'io.freefair.lombok' version '8.1.+'
}

allprojects {
	version = project.mod_version
	group = project.maven_group

	base {
		archivesName = project.archives_base_name
	}

	apply {
		plugin 'java'
		plugin 'maven-publish'
		plugin 'io.freefair.lombok'
	}

	repositories {
		maven { url 'https://jitpack.io' }
		mavenCentral()
		mavenLocal()
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.release.set(8)
	}

	java {
		// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
		// if it is present.
		// If you remove this line, sources will not be generated.
		withSourcesJar()

		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}

	// configure the maven publication
	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
			}
		}

		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
		repositories {
			// Add repositories to publish to here.
			// Notice: This block does NOT have the same function as the block in the top level.
			// The repositories here will be used for publishing your artifact, not for
			// retrieving dependencies.
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	include (api 'org.lwjgl:lwjgl-nanovg:3.3.2')
	include (api 'org.lwjgl:lwjgl-nanovg:3.3.2:natives-linux')
	include (api 'org.lwjgl:lwjgl-nanovg:3.3.2:natives-linux-arm64')
	include (api 'org.lwjgl:lwjgl-nanovg:3.3.2:natives-windows')
	include (api 'org.lwjgl:lwjgl-nanovg:3.3.2:natives-windows-arm64')
	include (api 'org.lwjgl:lwjgl-nanovg:3.3.2:natives-macos')
	include (api 'org.lwjgl:lwjgl-nanovg:3.3.2:natives-macos-arm64')

	include implementation(project(":lwjgl2"))
	include implementation(project(":lwjgl3"))
	include implementation(project(':common'))
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}

	//from(project(":common").sourceSets.main.output)
	//from(project(":lwjgl2").sourceSets.main.output)
	//from(project(":lwjgl3").sourceSets.main.output)
}

sourcesJar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}

	//from(project(":common").sourceSets.main.output)
	//from(project(":lwjgl2").sourceSets.main.output)
	//from(project(":lwjgl3").sourceSets.main.output)
}
